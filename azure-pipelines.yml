# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger: 
- master
pool:
  vmImage: 'windows-2019'

variables:
- name: solution
  value: '**/*.sln'
- name: buildPlatform
  value: 'Any CPU'
- name: buildConfiguration
  value: 'Release'
stages:
- stage: Build
  jobs:
  - job: Job
    pool:
      vmImage: 'windows-2019'
    steps:
    - checkout: self
      fetchDepth: 0
    - task: SonarCloudPrepare@1
      enabled: false
      inputs:
        SonarCloud: 'sonarcloud'
        organization: 'devopscapdemo'
        scannerMode: 'MSBuild'
        projectKey: 'DevOpsCapDemo_DevSecOpsDemo'
        projectName: 'DevSecOpsDemo'
    - task: NuGetToolInstaller@1
    - task: DotNetCoreCLI@2
      displayName: 'Build the source code'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: 'Build the source code'
      inputs:
        command: 'test'
        projects: '**/*Test**.csproj'
    - task: VSBuild@1
      enabled: false
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\Web\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: SonarCloudAnalyze@1
      enabled: false
    - task: SonarCloudPublish@1
      enabled: false
      inputs:
        pollingTimeoutSec: '300'
    - task: VSTest@2
      enabled: false
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*Test*.dll
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
        codeCoverageEnabled: true
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: CopyFiles@2
      inputs:
        Contents: '**'
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: DotNetCoreCLI@2
      displayName: 'Publish the source code'
      inputs:
        command: 'publish'
        publishWebProjects: true
        modifyOutputPath: false
    - task: PublishBuildArtifacts@1
      enabled: false
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    - task: PublishPipelineArtifact@1
      enabled: false
      inputs:
        targetPath: $(build.artifactStagingDirectory)/Web/
        artifactName: WebApp
    - task: NuGetAuthenticate@1
    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(System.DefaultWorkingDirectory)/**/*.zip'
        nuGetFeedType: 'internal'
        publishVstsFeed: '4528bd78-c535-4916-bd8a-59275f5a5306/2918157a-5f27-4741-b144-b7960b2b99b6'
#    - task: FortifyOnDemandStatic@8
#      inputs:
#        FortifyProjects: '$(Build.ArtifactStagingDirectory)/Web'
#        FodConnection: 'newFortifyConn'
#        ReleaseOptions: '0'
#        ReleaseId: 200959
#        EntitlementSelection: '1'
#        EntitlementPreference: '0'
#        OverrideScanSettings: '1'
#        InProgressScanActionType: '2'
#        RemediationScanPreference: '2'
#        BuildType: 'msbuild'
#        LanguageLevelDotNet: '32'
#        PolicyFailAction: '1'
- stage: Deploy
  jobs:
  - deployment: publishinternal
    displayName: 'Publish the Application'
    environment: PROD
    pool:
      vmImage: 'windows-2019'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: WebApp
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'azConn'
              appType: 'webApp'
              WebAppName: 'demowebappforvelocity'
              packageForLinux: '$(Pipeline.Workspace)/**/Web/*.zip'